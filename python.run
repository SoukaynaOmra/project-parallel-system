#!/usr/bin/env python3

from subprocess import call,DEVNULL,STDOUT,check_output,CalledProcessError
import shlex

with open("results/parallel_.csv", 'w') as csvfile:

	nb_processes = [4, 8, 16, 32, 64]
	for s in nb_processes:
		csvfile.write(str(s) + " nb of processes")
		for i in range(5):
			# --use-hwthread-cpus
			command_to_execute="time mpirun --mca btl ^openib -n "+ str(s) + " -hostfile machinefile ./parallel.run" 
			call(shlex.split(command_to_execute),stdout=DEVNULL,stderr=STDOUT)
			result=check_output(shlex.split(command_to_execute), stderr=STDOUT, universal_newlines=True)

			for line in result.split('\n'):
				if "elapsed" in line:
					csvfile.write(line.replace('\t',' ').split(' ')[2]+";")

		csvfile.write("\n")



#!/usr/bin/env python3

from subprocess import call,DEVNULL,STDOUT,check_output,CalledProcessError
import shlex

with open("results/parallel_4.csv", 'w') as csvfile:

	msize = [32768, 65536, 131072, 262144]

	for s in msize:
		csvfile.write(str(s) + " matrix size;")
		for i in range(5):
#-hostfile machinefile
			command_to_execute="time mpirun --mca btl ^openib -n 4 ./parallel.run  "+ str(s) 
			call(shlex.split(command_to_execute),stdout=DEVNULL,stderr=STDOUT)
			result=check_output(shlex.split(command_to_execute), stderr=STDOUT, universal_newlines=True)

			for line in result.split('\n'):
				if "elapsed" in line:
					csvfile.write(line.replace('\t',' ').split(' ')[2]+";")

		csvfile.write("\n")


32768, 65536, 131072, 262144, 524288, 1048576

#!/usr/bin/env python3

from subprocess import call,DEVNULL,STDOUT,check_output,CalledProcessError
import shlex

with open("results/sequenial_524288.csv", 'w') as csvfile:

	msize = [32768, 65536, 131072, 262144, 524288, 1048576]

	for s in msize:
		csvfile.write(str(s) + " matrix size;")
		for i in range(5):
			# --use-hwthread-cpus
			command_to_execute="time ./sequntial.run " + str(s) 
			call(shlex.split(command_to_execute),stdout=DEVNULL,stderr=STDOUT)
			result=check_output(shlex.split(command_to_execute), stderr=STDOUT, universal_newlines=True)

			for line in result.split('\n'):
				if "elapsed" in line:
					csvfile.write(line.replace('\t',' ').split(' ')[2]+";")

		csvfile.write("\n")






#!/usr/bin/env python3

from subprocess import call,DEVNULL,STDOUT,check_output,CalledProcessError
import shlex

with open("results/parallel_.csv", 'w') as csvfile:

	msize = [5242880, 26214400, 131072000]
	nb_processes = [4, 8, 16, 32, 64]

	for a in msize:
		csvfile.write(str(a) + " matrix size \n")
		for s in nb_processes:
			csvfile.write(str(s) + " nb of processes;")
			for i in range(5):

				command_to_execute="time mpirun --mca btl ^openib -n "+ str(s) + " -hostfile machinefile ./parallel.run"  + str(a) 
				call(shlex.split(command_to_execute),stdout=DEVNULL,stderr=STDOUT)
				result=check_output(shlex.split(command_to_execute), stderr=STDOUT, universal_newlines=True)

				for line in result.split('\n'):
					if "elapsed" in line:
						csvfile.write(line.replace('\t',' ').split(' ')[2]+";")

			csvfile.write("\n")
